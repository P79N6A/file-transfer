diff --git a/net/bluetooth/l2cap_core.c b/net/bluetooth/l2cap_core.c
index 2a7fb517d..b7dcefc0a 100644
--- a/net/bluetooth/l2cap_core.c
+++ b/net/bluetooth/l2cap_core.c
@@ -1502,19 +1502,19 @@ static void l2cap_le_conn_ready(struct l2cap_conn *conn)
 	 * been configured for this connection. If not, then trigger
 	 * the connection update procedure.
 	 */
-	if (hcon->role == HCI_ROLE_SLAVE &&
-	    (hcon->le_conn_interval < hcon->le_conn_min_interval ||
-	     hcon->le_conn_interval > hcon->le_conn_max_interval)) {
-		struct l2cap_conn_param_update_req req;
-
-		req.min = cpu_to_le16(hcon->le_conn_min_interval);
-		req.max = cpu_to_le16(hcon->le_conn_max_interval);
-		req.latency = cpu_to_le16(hcon->le_conn_latency);
-		req.to_multiplier = cpu_to_le16(hcon->le_supv_timeout);
-
-		l2cap_send_cmd(conn, l2cap_get_ident(conn),
-			       L2CAP_CONN_PARAM_UPDATE_REQ, sizeof(req), &req);
-	}
+	//if (hcon->role == HCI_ROLE_SLAVE &&
+	//    (hcon->le_conn_interval < hcon->le_conn_min_interval ||
+	//     hcon->le_conn_interval > hcon->le_conn_max_interval)) {
+	//	struct l2cap_conn_param_update_req req;
+
+	//	req.min = cpu_to_le16(hcon->le_conn_min_interval);
+	//	req.max = cpu_to_le16(hcon->le_conn_max_interval);
+	//	req.latency = cpu_to_le16(hcon->le_conn_latency);
+	//	req.to_multiplier = cpu_to_le16(hcon->le_supv_timeout);
+
+	//	l2cap_send_cmd(conn, l2cap_get_ident(conn),
+	//		       L2CAP_CONN_PARAM_UPDATE_REQ, sizeof(req), &req);
+	//}
 }
 
 static void l2cap_conn_ready(struct l2cap_conn *conn)
